@{
    Layout = "/Views/Shared/_Layout.cshtml";
}

@model List<NoteCapture.Models.Note>
@{ 
    Note firstNote = Model.First();
    int firstNoteID = firstNote.ID;
}

<style>
    .filter-form-popup {
        display: none;
        position: fixed;
        border: 3px solid black;
        top: 0;
        z-index: 999;
    }

    .form-container {
        max-width: 300px;
        padding: 10px;
        background-color: white;
    }
</style>

<div class="container-fluid">
    <div class="row">
        <div class="col-6 col1">
            <nav class="navbar navbar-light bg-light">
                <ul class="navbar-nav mr-auto">
                    <li class="nav-item active">
                        <a id="filterLink" class="nav-link" href="#" onclick="openFilterForm(); return false;">Filter</a>
                    </li>
                    <div class="filter-form-popup" id="filterForm">
                        <form class="form-container">
                            <select name="tags" id="tags">
                                <option value="tag1">Tag 1</option>
                                <option value="tag2">Tag 2</option>
                            </select>

                            <button type="submit" class="btn btn-primary">Filter</button>
                        </form>
                        <button class="btn btn-danger" onclick="closeFilterForm()">Close</button>
                    </div>
                    <li class="nav-item active">
                        <a class="nav-link" href="#">Sort</a>
                    </li>
                </ul>
            </nav>
            @foreach (var note in Model)
            {
                <div class="card note-card card-click" id="@note.ID">
                    <div class="card-header">@note.NoteTitle</div>
                    <div class="card-body">@Html.Raw(note.NoteText)</div>
                </div>
            }
        </div>

        <div class="col-6 col2">
            <div class="note-header">
                <p class="save-information">Last edited July 12th, 2021</p>
                <button type="button">...</button>
            </div>
            <form id="editorForm" style="height: 100vh;" asp-controller="Notes" asp-action="Edit" method="post">
                <input type="hidden" id="ID" name="ID" />
                <div class="input-group form-group">
                    <input class="name-should-be-better" id="NoteTitle" name="NoteTitle" type="text" placeholder="Title" />
                </div>
                <div class="input-group form-group">
                    <textarea id="NoteText" style="height: 90%;" name="NoteText" class="form-control"></textarea>
                </div>
                <!--
                <div class="form-group">
                    <input type="submit" class="btn btn-primary" value="Submit" />
                </div>
                -->
            </form>

            <button class="btn btn-primary" id="ajax-test-button">AJAX Test</button>

            <!--
            <form asp-controller="Notes" asp-action="MoveToTrash" method="post">
                <input type="hidden" id="NoteTrashID" name="NoteTrashID" />
                <button type="submit" style="justify-content: center;" class="btn btn-danger trash-button"><i class="fas fa-trash"></i> Move to Trash?</button>
            </form>
            -->
        </div>
    </div>
</div>


<script>
    function openFilterForm() {
        document.getElementById("filterForm").style.display = "block";
    }

    function closeFilterForm() {
        document.getElementById("filterForm").style.display = "none";
    }
</script>
<script src="https://cdn.tiny.cloud/1/sdhg5pggurg8ldhp6e6hdqx8eragpccy99awa61ejtm0tll8/tinymce/5/tinymce.min.js" referrerpolicy="origin"></script>
<script>
    tinymce.init({
        selector: 'textarea',
        height: "500",
        skin: "outside"
    });
</script>
<script>
    $(document).ready(function () {
        // Function to set editor values by whatever note is selected.
        $(".card-click").click(function () {
            // Add a border to the card that's clicked
            $("div.card").css("border", "0px");
            $(this).css("border", "1px solid black");

            // Extract the content that needs to be passed into the edit form
            var noteTitle = $(this).children("div.card-header").text()
            var noteText = $(this).children("div.card-body").html();
            var noteID = $(this).attr("id");

            // Set the values in the edit form and the trash form
            $("#ID").val(noteID);
            $("#NoteTrashID").val(noteID);
            $("#NoteTitle").val(noteTitle);
            tinymce.activeEditor.setContent(noteText);
        });

        // Function to submit the AJAX test button
        $("button#ajax-test-button").click(function () {
            // Get the three variable values for NoteEditViewModel, and pass as a JSON object to the controller
            var noteID = $("input#ID").val();
            var noteText = tinymce.activeEditor.getContent();
            var noteTitle = $("#NoteTitle").val();

            // Create JSON object with values corresponding to those of NoteEditViewModel
            var noteEdit = {
                ID : noteID,
                NoteText : noteText,
                NoteTitle: noteTitle
            };

            // Now pass to the controller with AJAX
            $.ajax({
                type: "POST",
                url: "@Url.Action("AjaxTest", "Notes")",
                dataType: "json",
                // contentType: "application/json; charset=utf-8",
                data: noteEdit,
                success: function (msg) {
                    updateNote(msg.noteID, msg.noteTitle, msg.noteText);
                },
                error: function () {
                    console.log("Error has occurred");
                }
            });
        });

        // Function to update a note asynchronously after it's been updated
        function updateNote(ID, noteTitle, noteText) {
            console.log("card#" + ID);
            var noteCard = $("#" + ID);
            console.log(noteCard);
            noteCard.children("div.card-header").text(noteTitle);
            noteCard.children("div.card-body").html(noteText);
        }

        // Automatically select the first card when document loads
        // var firstCard = $("")
        var firstNoteID = @firstNoteID;
        $("#" + firstNoteID).click();

    });
</script>
